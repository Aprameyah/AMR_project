<launch>

  <!-- Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find ddr)/worlds/Project_maze.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Spawning the model in Gazebo-->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find ddr)/urdf/ddr.xacro'" />
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0"/>
  <arg name="roll" default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="0"/>
  <node name="mybot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
    args="-urdf -param robot_description -model m2wr -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) ">
  </node>

  <!--Publish state of robot via tf-->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- Show in Rviz   -->
  <arg name="rvizconfig" default="$(find ddr)/rviz_configs/default.rviz" />
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />

  <!-- AMCL -->
  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>
  <arg name="map_file" default="$(find ddr)/map/map.yaml"/>
  <arg name="scan_topic"  default="/ddr/laser/scan"/>
  
  <node pkg="amcl" type="amcl" name="amcl">
    <param name="min_particles"             value="500"/>
    <param name="max_particles"             value="5000"/>
    <param name="kld_err"                   value="0.01"/>
    <param name="update_min_d"              value="0.20"/>
    <param name="update_min_a"              value="0.174533"/>
    <param name="resample_interval"         value="2"/>
    <param name="transform_tolerance"       value="0.5"/>
    <param name="recovery_alpha_slow"       value="0.001"/>
    <param name="recovery_alpha_fast"       value="0.1"/>
    <param name="initial_pose_x"            value="$(arg initial_pose_x)"/>
    <param name="initial_pose_y"            value="$(arg initial_pose_y)"/>
    <param name="initial_pose_a"            value="$(arg initial_pose_a)"/>
    <param name="gui_publish_rate"          value="50.0"/>
    <!--laser_parameters-->
    <remap from="scan"                      to="$(arg scan_topic)"/>
    <param name="laser_max_beams"           value="180"/>
    <!-- odom_parameters-->
    <param name="odom_model_type"           value="diff"/>
    <param name="odom_alpha1"               value="0.1"/>
    <param name="odom_alpha2"               value="0.1"/>
    <param name="odom_alpha3"               value="0.1"/>
    <param name="odom_alpha4"               value="0.1"/>
    <param name="odom_frame_id"             value="odom"/>
    <param name="base_frame_id"             value="link_chassis"/>
  </node>
  <!-- Map server -->
 <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <!--odom_topic-->
  <arg name="odom_topic" default="odom" />
  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find ddr_nav)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find ddr_nav)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find ddr_nav)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find ddr_nav)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find ddr_nav)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find ddr_nav)/param/dwa_local_planner_params.yaml" command="load" />
    <remap from="odom" to="$(arg odom_topic)"/>
  </node>
</launch>
